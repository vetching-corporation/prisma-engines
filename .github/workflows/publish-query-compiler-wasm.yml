name: Build and publish @vetching-corporation/prisma-query-compiler-wasm
run-name: npm - release @vetching-corporation/prisma-query-compiler-wasm@${{ github.event.inputs.packageVersion }} from ${{ github.event.inputs.enginesHash }} on ${{ github.event.inputs.npmDistTag }}

concurrency: publish-query-compiler-wasm

on:
  # usually triggered via GH Actions Workflow in prisma/engines-wrapper repo
  workflow_dispatch:
    inputs:
      packageVersion:
        required: true
        description: 'New @prisma/query-compiler-wasm package version'
      enginesHash:
        required: true
        description: 'query-compiler commit to build'
      npmDistTag:
        required: true
        default: 'latest'
        description: 'npm dist-tag (e.g. latest or integration)'

jobs:
  build:
    name: Build and publish @vetching-corporation/prisma-query-compiler-wasm
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Print input
        run: echo "${{ toJson(github.event.inputs) }}"

      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.enginesHash }}

      - uses: ./.github/workflows/include/rust-wasm-setup

      - name: Build @vetching-corporation/prisma-query-compiler-wasm
        run: make build-qc-wasm
        env:
          QE_WASM_VERSION: ${{ github.event.inputs.packageVersion }}

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: https://npm.pkg.github.com
          scope: '@vetching-corporation'

      - name: Install jq
        uses: dcarbone/install-jq-action@v3

      - name: Set package version with sequence
        id: semver
        env:
          WORKING_DIR: query-compiler/query-compiler-wasm/pkg
          BASE_VERSION: ${{ github.event.inputs.packageVersion }}
          PACKAGE: '@vetching-corporation/prisma-query-compiler-wasm'
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          versions=$(npm view "$PACKAGE" versions --json 2>/dev/null || echo '[]')
          sequence=$(
            echo "$versions" | jq -r --arg base "$BASE_VERSION" '
              map(select(startswith($base + "-")))
              | map(split("-")[1] | split(".")[0] | tonumber)
              | max
            '
          )
          sequence=$((sequence + 1))

          PACKAGE_VERSION="${BASE_VERSION}-${sequence}.${{ github.event.inputs.enginesHash }}"
          echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> $GITHUB_OUTPUT

          jq --arg version "$PACKAGE_VERSION" '.version=$version' "$WORKING_DIR/package.json" > "$WORKING_DIR/package-temp.json"
          mv "$WORKING_DIR/package-temp.json" "$WORKING_DIR/package.json"

      - name: Publish @vetching-corporation/prisma-querny-compiler-wasm
        run: npm publish --tag ${{ github.event.inputs.npmDistTag }}
        working-directory: query-compiler/query-compiler-wasm/pkg
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      #
      # Success handlers
      #
      - name: Set current job url in SLACK_FOOTER env var
        if: ${{ success() }}
        run: echo "SLACK_FOOTER=<$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID|Click here to go to the job logs>" >> $GITHUB_ENV
      - name: Slack Notification on Success
        if: ${{ success() }}
        uses: rtCamp/action-slack-notify@v2.3.2
        env:
          SLACK_TITLE: 'Building and publishing @vetching-corporation/prisma-query-compiler-wasm succeeded :tada:'
          SLACK_COLOR: '#00FF00'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_WASM }}
      - name: Release tag
        if: ${{ success() }}
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CUSTOM_TAG: ${{ steps.semver.outputs.PACKAGE_VERSION }}

      #
      # Failure handlers
      #
      - name: Set current job url in SLACK_FOOTER env var
        if: ${{ failure() }}
        run: echo "SLACK_FOOTER=<$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID|Click here to go to the job logs>" >> $GITHUB_ENV
      - name: Slack Notification on Failure
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2.3.2
        env:
          SLACK_TITLE: 'Building and publishing @vetching-corporation/prisma-query-compiler-wasm failed :x:'
          SLACK_COLOR: '#FF0000'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_WASM }}
